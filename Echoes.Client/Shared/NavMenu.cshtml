@using Echoes.Client.Services
@inject LoginService LoginService

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Echoes</a>
    <button class="navbar-toggler" onclick=@ToggleNavMenu>
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class=@(collapseNavMenu ? "collapse" : null) onclick=@ToggleNavMenu>
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match=NavLinkMatch.All>
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        @if (LoginService.IsLoggedIn)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="assignments">
                    <span class="oi oi-book" aria-hidden="true"></span> Assignments
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="classes">
                    <span class="oi oi-people" aria-hidden="true"></span> Classes
                </NavLink>
            </li>

            <li class="nav-item px-3">
                <div onclick="@LogoutAsync" class="nav-link">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </div>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </li>
        }
    </ul>
</div>

@functions {
    bool collapseNavMenu = true;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInit()
    {
        LoginService.OnChange += StateHasChanged;
    }

    async Task LogoutAsync()
    {
        await LoginService.LogoutAsync();
    }
}
